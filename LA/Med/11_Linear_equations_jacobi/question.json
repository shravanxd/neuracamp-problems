{
    "qid": 11,
    "title": "Solve Linear Equations using Jacobi Method",
    "qtext": "Write a Python function that uses the Jacobi method to solve a system of linear equations given by Ax = b. The function should iterate n times, rounding each intermediate solution to four decimal places, and return the approximate solution x.\n\nExample:\n\nInput:\n```python\nA = [[5, -2, 3], [-3, 9, 1], [2, -1, -7]]\nb = [-1, 2, 3]\nn = 2\n```\n\nOutput:\n```python\n[0.146, 0.2032, -0.5175]\n```\n\nReasoning:\nThe Jacobi method iteratively solves each equation for x[i] using the formula:\n\n$$\nx[i] = \\frac{1}{a_{ii}} \\left( b[i] - \\sum_{j \\neq i} a_{ij}x[j] \\right)\n$$\n\nwhere \\( a_{ii} \\) is the diagonal element of A and \\( a_{ij} \\) are the off-diagonal elements.",
    "inputFormat": "Three inputs:\n- `A` (list of lists): Coefficient matrix.\n- `b` (list): Right-hand side vector.\n- `n` (integer): Number of iterations to perform.",
    "outputFormat": "A list of floats representing the approximate solution vector x, rounded to four decimal places.",
    "reason": "The Jacobi method provides an iterative approach to solving linear systems, especially useful when direct methods are computationally too expensive for large matrices.",
    "learnAbout": "Solving Linear Equations Using the Jacobi Method\n\nThe Jacobi method is an iterative algorithm used for solving a system of linear equations (\\( Ax = b \\)). This method is particularly useful for large systems where direct methods, such as Gaussian elimination, are computationally expensive.\n\n**Algorithm Overview**\nFor a system of equations represented by (\\( Ax = b \\)), where (\\( A \\)) is a matrix and (\\( x \\)) and (\\( b \\)) are vectors, the Jacobi method involves the following steps:\n\n1. **Initialization**: Start with an initial guess for (\\( x \\)).\n2. **Iteration**: For each equation (\\( i \\)), update (\\( x[i] \\)) using:\n\n$$\nx[i] = \\frac{1}{a_{ii}} \\left( b[i] - \\sum_{j \\neq i} a_{ij}x[j] \\right)\n$$\n\nwhere (\\( a_{ii} \\)) are the diagonal elements of (\\( A \\)), and (\\( a_{ij} \\)) are the off-diagonal elements.\n\n3. **Convergence**: Repeat the iteration until the changes in (\\( x \\)) are below a certain tolerance or until a maximum number of iterations is reached.\n\nThis method assumes that all diagonal elements of (\\( A \\)) are non-zero and that the matrix is diagonally dominant or properly conditioned for convergence.\n\n**Practical Considerations**\n- The method may not converge for all matrices.\n- Choosing a good initial guess can improve convergence.\n- Diagonal dominance of (\\( A \\)) ensures the convergence of the Jacobi method."
  }  