{
    "qid": 10,
    "title": "Calculate Covariance Matrix",
    "qtext": "Write a Python function to calculate the covariance matrix for a given set of vectors. The function should take a list of lists, where each inner list represents a feature with its observations, and return a covariance matrix as a list of lists. Additionally, provide test cases to verify the correctness of your implementation.\n\nExample:\nInput:\n```python\n[[1, 2, 3], [4, 5, 6]]\n```\nOutput:\n```python\n[[1.0, 1.0], [1.0, 1.0]]\n```\n\nReasoning:\nThe covariance between the two features is calculated based on their deviations from the mean. For the given vectors, both covariances are 1.0, resulting in a symmetric covariance matrix.",
    "inputFormat": "One input:\n- A list of lists, where each inner list represents a feature and its observations across samples.",
    "outputFormat": "One output:\n- A list of lists representing the covariance matrix with each value rounded appropriately (default Python float precision).",
    "reason": "Calculating the covariance matrix helps quantify how features vary together in a dataset. It is a fundamental operation used in multivariate statistics and machine learning, providing insights into feature relationships.",
    "learnAbout": "Understanding Covariance Matrix\n\nThe covariance matrix is a core concept in statistics and machine learning, used to analyze the relationship between multiple variables. It measures the extent to which two variables change together.\n\n**Covariance** measures directional relationships:\n- Positive covariance: Variables increase together.\n- Negative covariance: One variable increases while the other decreases.\n\n**Covariance Matrix Construction:**\n- Given \\( n \\) features, the matrix is \\( n \\times n \\), with each element \\( (i, j) \\) representing the covariance between features \\( i \\) and \\( j \\).\n\n**Covariance Formula:**\n\n\\[ \\text{cov}(X, Y) = \\frac{\\sum_{k=1}^{m}(X_k - \\bar{X})(Y_k - \\bar{Y})}{m-1} \\]\n\nWhere:\n- \\( X_k \\) and \\( Y_k \\) are observations.\n- \\( \\bar{X} \\) and \\( \\bar{Y} \\) are means.\n- \\( m \\) is the number of observations.\n\n**Applications:**\n- **PCA (Principal Component Analysis)**: Covariance matrices identify directions of maximum variance.\n- **Portfolio Optimization**: Covariance helps in understanding asset relationships in finance.\n- **Multivariate Analysis**: Covariance matrices are foundational for statistical modeling of multiple variables.\n\nUnderstanding and calculating the covariance matrix is fundamental for analyzing variable relationships and preparing data for many machine learning algorithms."
  }
  