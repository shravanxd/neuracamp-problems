{
    "qid": 60,
    "title": "Implement TF-IDF (Term Frequency-Inverse Document Frequency)",
    "qtext": "Task: Implement TF-IDF (Term Frequency-Inverse Document Frequency)\n\nYour task is to implement a function that computes the TF-IDF scores for a query against a given corpus of documents.\n\nFunction Signature\nWrite a function compute_tf_idf(corpus, query) that takes the following inputs:\n\ncorpus: A list of documents, where each document is a list of words.\nquery: A list of words for which you want to compute the TF-IDF scores.\n\nOutput\nThe function should return a list of lists containing the TF-IDF scores for the query words in each document, rounded to five decimal places.\n\nExample:\nInput:\ncorpus = [\n    [\"the\", \"cat\", \"sat\", \"on\", \"the\", \"mat\"],\n    [\"the\", \"dog\", \"chased\", \"the\", \"cat\"],\n    [\"the\", \"bird\", \"flew\", \"over\", \"the\", \"mat\"]\n]\nquery = [\"cat\"]\n\nprint(compute_tf_idf(corpus, query))\n\nOutput:\n[[0.21461], [0.25754], [0.0]]\n\nReasoning:\nThe TF-IDF scores for the word \"cat\" in each document are computed and rounded to five decimal places.",
    "inputFormat": "corpus = [[\"the\", \"cat\", \"sat\", \"on\", \"the\", \"mat\"], [\"the\", \"dog\", \"chased\", \"the\", \"cat\"], [\"the\", \"bird\", \"flew\", \"over\", \"the\", \"mat\"]], query = [\"cat\"]",
    "outputFormat": "[[0.21461], [0.25754], [0.0]]",
    "reason": "The TF-IDF scores for the word \"cat\" in each document are computed and rounded to five decimal places.",
    "learnAbout": "Understanding TF-IDF (Term Frequency-Inverse Document Frequency)\n\nTF-IDF is a numerical statistic that reflects how important a word is in a document relative to a collection (or corpus). It is widely used in information retrieval, text mining, and natural language processing tasks.\n\nMathematical Formulation\nTF-IDF is the product of two key statistics: Term Frequency (TF) and Inverse Document Frequency (IDF).\n\n1. Term Frequency (TF)\nThe term frequency is defined as:\n\nTF(t,d) = (Number of times term t appears in document d) / (Total number of terms in document d)\n\nt: A specific term (word).\nd: A specific document in the corpus.\n\n2. Inverse Document Frequency (IDF)\nTo account for how common or rare a term is across all documents in the corpus, we calculate:\n\nIDF(t) = log((N + 1) / (df(t) + 1)) + 1\n\nWhere:\n- N: Total number of documents in the corpus.\n- df(t): Number of documents containing the term t.\n- Adding +1 inside the fraction prevents division by zero.\n- Adding +1 outside the log ensures IDF remains nonzero.\n\n3. TF-IDF\nCombining TF and IDF:\n\nTFIDF(t,d) = TF(t,d) Ã— IDF(t)\n\nImplementation Steps\n- Compute TF\n- Compute IDF\n- Calculate TF-IDF\n- (Optional) Normalize the TF-IDF vectors\n\nApplications of TF-IDF\n- Information Retrieval\n- Text Mining\n- Document Classification\n- Search Engines\n- Recommendation Systems\n\nTF-IDF remains a foundational technique in natural language processing, widely used for feature extraction and analysis across numerous text-based applications."
  }
  